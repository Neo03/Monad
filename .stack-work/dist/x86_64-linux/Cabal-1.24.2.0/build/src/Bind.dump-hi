
==================== FINAL INTERFACE ====================
2017-12-12 10:59:55.307439 UTC

interface Monad-0.1.0.0-De4t3uhEx6WGh84WJ5s2MG:Bind 8002
  interface hash: 24b5600a275bcdbada35d02439cfe6eb
  ABI hash: c834ed3a145e7dbd9563ee5b3bbc9c6b
  export-list hash: e8415b3a85db26af3cf20b1d442d2b1d
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ab396f11155bd696ab63895436e6f1df
  sig of: Nothing
  used TH splices: False
  where
exports:
  Bind.bind
  Bind.twiceWhenEven
  Bind.twiceWhenEven'
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 318df275d77dcdb18e0006d8d7870c2a
215e0081ead1bae9e2a3064ec2cbee4a
  $seven1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
c48ba3bf6bbeadd8b52f7cde5fa085ba
  $seven2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
cde29e1de0e4005c0a32c706ad92c31c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Bind.$trModule2 Bind.$trModule1) -}
972f5ef85459a883f359c93998a254ce
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Bind"#) -}
f65e1ba6fa7879dedfa99d9e7939c56a
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Monad-0.1.0.0-De4t3uhEx6WGh84WJ5s2MG"#) -}
0076836db9e189458c3c3a87964345ea
  bind :: GHC.Base.Monad m => (a -> m b) -> m a -> m b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLL),U(1*U(1*U(1*C1(C1(U)),A),A,A,A,A),1*C1(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: (\ @ (m :: * -> *)
                   @ a
                   @ b
                   ($dMonad :: GHC.Base.Monad m)
                   (eta :: a -> m b)
                   (eta1 :: m a) ->
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (m b)
                   @ b
                   (GHC.Base.fmap
                      @ m
                      (GHC.Base.$p1Applicative @ m (GHC.Base.$p1Monad @ m $dMonad))
                      @ a
                      @ (m b)
                      eta
                      eta1)
                   (GHC.Base.breakpoint @ (m b))) -}
8baa25bafd9d9e66bd903088f8ba0c7c
  twiceWhenEven ::
    [GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (xs :: [GHC.Integer.Type.Integer]) ->
                 Bind.twiceWhenEven_go xs) -}
ba7e38e2300e274e463ad0c22293d3d1
  twiceWhenEven' ::
    [GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (xs :: [GHC.Integer.Type.Integer]) ->
                 Bind.twiceWhenEven'_go xs) -}
ed58a616497f5ef670ada401da09fcb5
  twiceWhenEven'_go ::
    [GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]
  {- Arity: 1, Strictness: <S,1*U> -}
86e94531351cfdbf16f48a9afe5eaec5
  twiceWhenEven_go ::
    [GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]
  {- Arity: 1, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

